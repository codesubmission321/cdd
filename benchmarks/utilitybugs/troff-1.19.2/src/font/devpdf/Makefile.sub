# Makefile.sub for `font devpdf'
#
# File position: <groff-source>/font/devpdf/Makefile.sub
#
# Copyright (C) 2011-2014 Free Software Foundation, Inc.
#      Written by Deri James <deri@chuzzlewit.demon.co.uk>
#
# This file is part of groff.
#
# groff is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# groff is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

DEV=pdf
GROFF_FONT_FILES=`cd $(top_builddir)/font/devpdf \
                  && find * -maxdepth 0 -type f ! -name 'Makefile.sub*' \
                            -exec grep -l internalname {} \;`
ENC_FILES=`cd $(top_builddir)/font/devpdf; ls enc/*`
MAP_FILES=`cd $(top_builddir)/font/devpdf; ls map/*`

MOSTLYCLEANADD=\
  download \
  DESC \
  Foundry \
  util/BuildFoundries \
  $(GROFF_FONT_FILES) \
  $(ENC_FILES) \
  $(MAP_FILES)

MOSTLYCLEANDIRADD=enc map

DEVFILES=\
  Foundry

#DEVSCRIPTS=util/BuildFoundries

DISTFILES=\
  $(DEVFILES) \
  $(DEVSCRIPTS)

RM=rm -f

all: DESC

DESC: DESC.in
	$(RM) DESC
	cat $(srcdir)/DESC.in >$(top_builddir)/font/devpdf/DESC
	if test "$(PAGE)" = A4; then \
	  echo "papersize a4" >>$(top_builddir)/font/devpdf/DESC; \
	else \
	  echo "papersize letter" >>$(top_builddir)/font/devpdf/DESC; \
	fi
	$(RM) Foundry
	cat $(srcdir)/Foundry.in >$(top_builddir)/font/devpdf/Foundry
	-test -d $(top_builddir)/font/devpdf/enc \
	  || $(mkinstalldirs) $(top_builddir)/font/devpdf/enc
	-test -d $(top_builddir)/font/devpdf/map \
	  || $(mkinstalldirs) $(top_builddir)/font/devpdf/map
	cp -f $(top_srcdir)/font/devps/text.enc \
	  $(top_builddir)/font/devpdf/enc
	cp -f $(top_srcdir)/font/devps/symbolmap \
	  $(top_builddir)/font/devpdf/map
	cp -f $(top_srcdir)/font/devps/generate/dingbats.map \
	  $(top_builddir)/font/devpdf/map
	cp -f $(top_srcdir)/font/devps/generate/textmap \
	  $(top_builddir)/font/devpdf/map
	cp -f $(top_srcdir)/font/devps/generate/symbolchars \
	  $(top_builddir)/font/devpdf/map
	-test -d util || $(mkinstalldirs) util
	$(RM) util/BuildFoundries
	if test -n "$(PERL)"; then \
	  sed -f $(SH_DEPS_SED_SCRIPT) \
	      -e "s|/usr/bin/perl|$(PERL)|" \
	      -e "s|@GROFF_GHOSTSCRIPT_INTERPRETERS@|$(GHOSTSCRIPT)|" \
	      -e "s|@VERSION@|$(version)$(revision)|" \
	      -e "s|@GROFF_FONT_DIR@|$(fontdir)|" \
	      $(srcdir)/util/BuildFoundries.pl \
	  >$(top_builddir)/font/devpdf/util/BuildFoundries ;\
	else \
	  sed -f $(SH_DEPS_SED_SCRIPT) \
	      -e "s|@VERSION@|$(version)$(revision)|" \
	      -e "s|@GROFF_FONT_DIR@|$(fontdir)|" \
	      $(srcdir)/util/BuildFoundries.pl \
	  >$(top_builddir)/font/devpdf/util/BuildFoundries ;\
	fi
	chmod +x util/BuildFoundries
	echo "# foundry	ps name	psfile" > $(top_builddir)/font/devpdf/download
	PATH="$(top_builddir)/src/utils/afmtodit:$(GROFF_PATH_SEPARATOR)$(PATH)" \
	  util/BuildFoundries $(top_builddir)/font/devpdf \
	    '$(top_srcdir)/font/devps : $(top_builddir)/font/devps' \
	   >> $(top_builddir)/font/devpdf/download

install_data:
	-test -d $(DESTDIR)$(fontsubdir) \
	  || $(mkinstalldirs) $(DESTDIR)$(fontsubdir)
	-test -d $(DESTDIR)$(fontsubdir)/enc \
	  || $(mkinstalldirs) $(DESTDIR)$(fontsubdir)/enc
	-test -d $(DESTDIR)$(fontsubdir)/map \
	  || $(mkinstalldirs) $(DESTDIR)$(fontsubdir)/map
	-test -d $(DESTDIR)$(fontsubdir)/util \
	  || $(mkinstalldirs) $(DESTDIR)$(fontsubdir)/util
	for f in $(MOSTLYCLEANADD); do \
	  $(RM) $(DESTDIR)$(fontsubdir)/$$f; \
	  if test -f $$f; then \
	    $(INSTALL_DATA) $$f $(DESTDIR)$(fontsubdir)/$$f; \
	  else \
	    $(INSTALL_DATA) $(srcdir)/$$f $(DESTDIR)$(fontsubdir)/$$f; \
	  fi; \
	done

uninstall_sub:
	-for f in $(MOSTLYCLEANADD); do \
	  $(RM) $(DESTDIR)$(fontsubdir)/$$f; \
	done
	-d=$(DESTDIR)$(fontsubdir)/enc; \
	  if test -d $$d; then rmdir $$d; fi
	-d=$(DESTDIR)$(fontsubdir)/map; \
	  if test -d $$d; then rmdir $$d; fi
	-d=$(DESTDIR)$(fontsubdir)/util; \
	  if test -d $$d; then rmdir $$d; fi
	-d=$(DESTDIR)$(fontsubdir); \
	  if test -d $$d; then rmdir $$d; fi

########################################################################
# Emacs settings
########################################################################
#
# Local Variables:
# mode: makefile
# End:
